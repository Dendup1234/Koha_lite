# Generated by Django 5.2.7 on 2025-10-17 18:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0003_patron'),
    ]

    operations = [
        migrations.CreateModel(
            name='Biblio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, max_length=255)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('publication_year', models.PositiveIntegerField(blank=True, null=True)),
                ('attributes', models.JSONField(blank=True, default=dict, help_text='Optional per-item-type metadata')),
            ],
            options={
                'verbose_name': 'biblio',
                'verbose_name_plural': 'biblios',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_number', models.CharField(max_length=30, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('ISSUED', 'Issued'), ('OVERDUE', 'Overdue'), ('LOST', 'Lost')], default='AVAILABLE', max_length=12)),
                ('biblio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='myapp.biblio')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='myapp.branch')),
                ('item_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='myapp.itemtype')),
            ],
            options={
                'ordering': ['accession_number'],
                'indexes': [models.Index(fields=['item_type'], name='myapp_item_item_ty_53de85_idx'), models.Index(fields=['branch'], name='myapp_item_branch__a2ff43_idx'), models.Index(fields=['status'], name='myapp_item_status_ede554_idx')],
            },
        ),
    ]
